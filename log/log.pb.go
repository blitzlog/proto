// Code generated by protoc-gen-go. DO NOT EDIT.
// source: log.proto

package log

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Level int32

const (
	Level_none  Level = 0
	Level_debug Level = 1
	Level_info  Level = 2
	Level_warn  Level = 3
	Level_error Level = 4
	Level_fatal Level = 5
)

var Level_name = map[int32]string{
	0: "none",
	1: "debug",
	2: "info",
	3: "warn",
	4: "error",
	5: "fatal",
}

var Level_value = map[string]int32{
	"none":  0,
	"debug": 1,
	"info":  2,
	"warn":  3,
	"error": 4,
	"fatal": 5,
}

func (x Level) String() string {
	return proto.EnumName(Level_name, int32(x))
}

func (Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{0}
}

type Log struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	File                 string            `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Line                 int32             `protobuf:"varint,3,opt,name=line,proto3" json:"line,omitempty"`
	Function             string            `protobuf:"bytes,4,opt,name=function,proto3" json:"function,omitempty"`
	Timestamp            int64             `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Level                Level             `protobuf:"varint,6,opt,name=level,proto3,enum=log.Level" json:"level,omitempty"`
	Verbosity            int32             `protobuf:"varint,7,opt,name=verbosity,proto3" json:"verbosity,omitempty"`
	Msg                  string            `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Instance             string            `protobuf:"bytes,10,opt,name=instance,proto3" json:"instance,omitempty"`
	Raw                  string            `protobuf:"bytes,11,opt,name=raw,proto3" json:"raw,omitempty"`
	Seq                  int32             `protobuf:"varint,12,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{0}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Log) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *Log) GetLine() int32 {
	if m != nil {
		return m.Line
	}
	return 0
}

func (m *Log) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

func (m *Log) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Log) GetLevel() Level {
	if m != nil {
		return m.Level
	}
	return Level_none
}

func (m *Log) GetVerbosity() int32 {
	if m != nil {
		return m.Verbosity
	}
	return 0
}

func (m *Log) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Log) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Log) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *Log) GetRaw() string {
	if m != nil {
		return m.Raw
	}
	return ""
}

func (m *Log) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type LogVal struct {
	Index                int32             `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Timestamp            int64             `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	LineTags             map[string]string `protobuf:"bytes,3,rep,name=lineTags,proto3" json:"lineTags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LogVal) Reset()         { *m = LogVal{} }
func (m *LogVal) String() string { return proto.CompactTextString(m) }
func (*LogVal) ProtoMessage()    {}
func (*LogVal) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{1}
}

func (m *LogVal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogVal.Unmarshal(m, b)
}
func (m *LogVal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogVal.Marshal(b, m, deterministic)
}
func (m *LogVal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogVal.Merge(m, src)
}
func (m *LogVal) XXX_Size() int {
	return xxx_messageInfo_LogVal.Size(m)
}
func (m *LogVal) XXX_DiscardUnknown() {
	xxx_messageInfo_LogVal.DiscardUnknown(m)
}

var xxx_messageInfo_LogVal proto.InternalMessageInfo

func (m *LogVal) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *LogVal) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *LogVal) GetLineTags() map[string]string {
	if m != nil {
		return m.LineTags
	}
	return nil
}

type LogKey struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Line                 int32    `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	Function             string   `protobuf:"bytes,3,opt,name=function,proto3" json:"function,omitempty"`
	Level                Level    `protobuf:"varint,4,opt,name=level,proto3,enum=log.Level" json:"level,omitempty"`
	Verbosity            int32    `protobuf:"varint,5,opt,name=verbosity,proto3" json:"verbosity,omitempty"`
	Msg                  string   `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogKey) Reset()         { *m = LogKey{} }
func (m *LogKey) String() string { return proto.CompactTextString(m) }
func (*LogKey) ProtoMessage()    {}
func (*LogKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{2}
}

func (m *LogKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogKey.Unmarshal(m, b)
}
func (m *LogKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogKey.Marshal(b, m, deterministic)
}
func (m *LogKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogKey.Merge(m, src)
}
func (m *LogKey) XXX_Size() int {
	return xxx_messageInfo_LogKey.Size(m)
}
func (m *LogKey) XXX_DiscardUnknown() {
	xxx_messageInfo_LogKey.DiscardUnknown(m)
}

var xxx_messageInfo_LogKey proto.InternalMessageInfo

func (m *LogKey) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *LogKey) GetLine() int32 {
	if m != nil {
		return m.Line
	}
	return 0
}

func (m *LogKey) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

func (m *LogKey) GetLevel() Level {
	if m != nil {
		return m.Level
	}
	return Level_none
}

func (m *LogKey) GetVerbosity() int32 {
	if m != nil {
		return m.Verbosity
	}
	return 0
}

func (m *LogKey) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type LogRaw struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Raw                  string   `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogRaw) Reset()         { *m = LogRaw{} }
func (m *LogRaw) String() string { return proto.CompactTextString(m) }
func (*LogRaw) ProtoMessage()    {}
func (*LogRaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{3}
}

func (m *LogRaw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRaw.Unmarshal(m, b)
}
func (m *LogRaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRaw.Marshal(b, m, deterministic)
}
func (m *LogRaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRaw.Merge(m, src)
}
func (m *LogRaw) XXX_Size() int {
	return xxx_messageInfo_LogRaw.Size(m)
}
func (m *LogRaw) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRaw.DiscardUnknown(m)
}

var xxx_messageInfo_LogRaw proto.InternalMessageInfo

func (m *LogRaw) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *LogRaw) GetRaw() string {
	if m != nil {
		return m.Raw
	}
	return ""
}

type Logs struct {
	Timestamp            int64             `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	InstTags             map[string]string `protobuf:"bytes,2,rep,name=instTags,proto3" json:"instTags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Vals                 []*LogVal         `protobuf:"bytes,3,rep,name=vals,proto3" json:"vals,omitempty"`
	Keys                 []*LogKey         `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	Raws                 []*LogRaw         `protobuf:"bytes,5,rep,name=raws,proto3" json:"raws,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Logs) Reset()         { *m = Logs{} }
func (m *Logs) String() string { return proto.CompactTextString(m) }
func (*Logs) ProtoMessage()    {}
func (*Logs) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{4}
}

func (m *Logs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Logs.Unmarshal(m, b)
}
func (m *Logs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Logs.Marshal(b, m, deterministic)
}
func (m *Logs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Logs.Merge(m, src)
}
func (m *Logs) XXX_Size() int {
	return xxx_messageInfo_Logs.Size(m)
}
func (m *Logs) XXX_DiscardUnknown() {
	xxx_messageInfo_Logs.DiscardUnknown(m)
}

var xxx_messageInfo_Logs proto.InternalMessageInfo

func (m *Logs) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Logs) GetInstTags() map[string]string {
	if m != nil {
		return m.InstTags
	}
	return nil
}

func (m *Logs) GetVals() []*LogVal {
	if m != nil {
		return m.Vals
	}
	return nil
}

func (m *Logs) GetKeys() []*LogKey {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Logs) GetRaws() []*LogRaw {
	if m != nil {
		return m.Raws
	}
	return nil
}

func init() {
	proto.RegisterEnum("log.Level", Level_name, Level_value)
	proto.RegisterType((*Log)(nil), "log.log")
	proto.RegisterMapType((map[string]string)(nil), "log.log.TagsEntry")
	proto.RegisterType((*LogVal)(nil), "log.logVal")
	proto.RegisterMapType((map[string]string)(nil), "log.logVal.LineTagsEntry")
	proto.RegisterType((*LogKey)(nil), "log.logKey")
	proto.RegisterType((*LogRaw)(nil), "log.logRaw")
	proto.RegisterType((*Logs)(nil), "log.logs")
	proto.RegisterMapType((map[string]string)(nil), "log.logs.InstTagsEntry")
}

func init() { proto.RegisterFile("log.proto", fileDescriptor_a153da538f858886) }

var fileDescriptor_a153da538f858886 = []byte{
	// 534 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0x66, 0xff, 0x42, 0xd6, 0x81, 0x6a, 0x65, 0x21, 0x61, 0x22, 0x50, 0x57, 0x39, 0xa0, 0x88,
	0xc3, 0x46, 0x6a, 0x85, 0xa8, 0xe0, 0x86, 0x04, 0x12, 0x2a, 0x27, 0x0b, 0xf5, 0xc0, 0xcd, 0x49,
	0x1c, 0x63, 0xd5, 0xb1, 0xcb, 0xda, 0xc9, 0xb2, 0x3c, 0x0c, 0xcf, 0xc0, 0x73, 0xf1, 0x06, 0xdc,
	0xd0, 0x78, 0x7f, 0xca, 0x46, 0x54, 0xb4, 0xa7, 0x1d, 0xcf, 0xf7, 0x79, 0x66, 0xfc, 0x7d, 0xa3,
	0x45, 0xa9, 0x32, 0xa2, 0xb8, 0x2a, 0x8d, 0x33, 0x38, 0x52, 0x46, 0xcc, 0x7e, 0x85, 0x08, 0xbe,
	0xf8, 0x08, 0x85, 0x72, 0x4d, 0x82, 0x3c, 0x98, 0xa7, 0x34, 0x94, 0x6b, 0x8c, 0x51, 0xbc, 0x91,
	0x8a, 0x93, 0xd0, 0x67, 0x7c, 0x0c, 0x39, 0x25, 0x35, 0x27, 0x51, 0x1e, 0xcc, 0x13, 0xea, 0x63,
	0x3c, 0x45, 0xe3, 0xcd, 0x4e, 0xaf, 0x9c, 0x34, 0x9a, 0xc4, 0x9e, 0xdb, 0x9f, 0xf1, 0x53, 0x94,
	0x3a, 0xb9, 0xe5, 0xd6, 0xb1, 0xed, 0x15, 0x49, 0xf2, 0x60, 0x1e, 0xd1, 0xeb, 0x04, 0xce, 0x51,
	0xa2, 0xf8, 0x9e, 0x2b, 0x32, 0xca, 0x83, 0xf9, 0xd1, 0x09, 0x2a, 0x60, 0x32, 0x9f, 0xa1, 0x0d,
	0x00, 0xf7, 0xf7, 0xbc, 0x5c, 0x1a, 0x2b, 0x5d, 0x4d, 0xee, 0xfb, 0xa6, 0xd7, 0x09, 0x9c, 0xa1,
	0x68, 0x6b, 0x05, 0x19, 0xfb, 0xa6, 0x10, 0xe2, 0xe7, 0x28, 0x76, 0x4c, 0x58, 0x92, 0xe6, 0xd1,
	0x7c, 0x72, 0x82, 0x9b, 0x82, 0x46, 0x14, 0x9f, 0x98, 0xb0, 0xef, 0xb4, 0x2b, 0x6b, 0xea, 0x71,
	0x98, 0x59, 0x6a, 0xeb, 0x98, 0x5e, 0x71, 0x82, 0x9a, 0x99, 0xbb, 0x33, 0x54, 0x2d, 0x59, 0x45,
	0x26, 0x4d, 0xd5, 0x92, 0x55, 0x90, 0xb1, 0xfc, 0x2b, 0x79, 0xe0, 0xfb, 0x43, 0x38, 0x7d, 0x85,
	0xd2, 0xbe, 0x24, 0xc0, 0x97, 0xbc, 0x6e, 0x95, 0x83, 0x10, 0x3f, 0x42, 0xc9, 0x9e, 0xa9, 0x5d,
	0xa7, 0x5d, 0x73, 0x78, 0x1d, 0x9e, 0x05, 0xb3, 0x9f, 0x01, 0x1a, 0x29, 0x23, 0x2e, 0x98, 0x02,
	0x92, 0xd4, 0x6b, 0xfe, 0xcd, 0x5f, 0x4c, 0x68, 0x73, 0x18, 0x2a, 0x16, 0x1e, 0x2a, 0xf6, 0x12,
	0x8d, 0x41, 0x73, 0xe8, 0x4d, 0x22, 0xff, 0xc6, 0x27, 0xdd, 0x1b, 0x2f, 0x98, 0x2a, 0x3e, 0xb6,
	0x58, 0xf3, 0xd4, 0x9e, 0x3a, 0x7d, 0x83, 0x1e, 0x0e, 0xa0, 0x3b, 0x8d, 0xfc, 0xa3, 0x19, 0xf9,
	0x9c, 0xd7, 0xfd, 0x4a, 0x04, 0xff, 0x58, 0x89, 0xf0, 0x86, 0x95, 0x88, 0x0e, 0x56, 0xa2, 0x37,
	0x3d, 0xbe, 0x95, 0xe9, 0xc9, 0x0d, 0xa6, 0x8f, 0x7a, 0xd3, 0x67, 0x67, 0x7e, 0x3e, 0xca, 0xaa,
	0xa1, 0x78, 0xc1, 0xa1, 0x78, 0xad, 0xb1, 0x61, 0x6f, 0xec, 0xec, 0x77, 0x80, 0x62, 0x65, 0x84,
	0xfd, 0xcf, 0xc5, 0xd3, 0x66, 0x5b, 0xbc, 0xea, 0xa1, 0x57, 0xfd, 0x71, 0xa7, 0xba, 0x2d, 0x3e,
	0xb4, 0x48, 0xab, 0x79, 0x47, 0xc4, 0xc7, 0x28, 0xde, 0x33, 0xd5, 0xd9, 0x34, 0xf9, 0xcb, 0x26,
	0xea, 0x01, 0x20, 0x5c, 0xf2, 0xda, 0x92, 0x78, 0x48, 0x38, 0xe7, 0x35, 0xf5, 0x00, 0x10, 0x4a,
	0x56, 0x59, 0x92, 0x0c, 0x09, 0x94, 0x55, 0xd4, 0x03, 0x60, 0xeb, 0xa0, 0xfb, 0x5d, 0x6c, 0x7d,
	0xf1, 0xbe, 0xf5, 0x01, 0x8f, 0x51, 0xac, 0x8d, 0xe6, 0xd9, 0x3d, 0x9c, 0xa2, 0x64, 0xcd, 0x97,
	0x3b, 0x91, 0x05, 0x90, 0x94, 0x7a, 0x63, 0xb2, 0x10, 0xa2, 0x8a, 0x95, 0x3a, 0x8b, 0x00, 0xe6,
	0x65, 0x69, 0xca, 0x2c, 0x86, 0x70, 0xc3, 0x1c, 0x53, 0x59, 0xf2, 0xf6, 0xf8, 0xf3, 0x33, 0x21,
	0xdd, 0x97, 0xdd, 0xb2, 0x58, 0x99, 0xed, 0x62, 0xa9, 0xa4, 0xfb, 0xae, 0x8c, 0x58, 0xf8, 0x1f,
	0xcc, 0x42, 0x19, 0xb1, 0x1c, 0xf9, 0xf0, 0xf4, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfc, 0x96,
	0x41, 0x0d, 0x78, 0x04, 0x00, 0x00,
}
